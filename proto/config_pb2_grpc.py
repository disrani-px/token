# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import config_pb2 as config__pb2


class TokensStub(object):
  """these are list of calls client can make
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Get = channel.unary_unary(
        '/proto.Tokens/Get',
        request_serializer=config__pb2.JobID.SerializeToString,
        response_deserializer=config__pb2.Data.FromString,
        )
    self.Done = channel.unary_unary(
        '/proto.Tokens/Done',
        request_serializer=config__pb2.JobID.SerializeToString,
        response_deserializer=config__pb2.Ack.FromString,
        )
    self.Reset = channel.unary_unary(
        '/proto.Tokens/Reset',
        request_serializer=config__pb2.Empty.SerializeToString,
        response_deserializer=config__pb2.Ack.FromString,
        )
    self.Rescan = channel.unary_unary(
        '/proto.Tokens/Rescan',
        request_serializer=config__pb2.Empty.SerializeToString,
        response_deserializer=config__pb2.Ack.FromString,
        )
    self.Shuffle = channel.unary_unary(
        '/proto.Tokens/Shuffle',
        request_serializer=config__pb2.Empty.SerializeToString,
        response_deserializer=config__pb2.Ack.FromString,
        )
    self.Show = channel.unary_unary(
        '/proto.Tokens/Show',
        request_serializer=config__pb2.Empty.SerializeToString,
        response_deserializer=config__pb2.Data.FromString,
        )
    self.HeartBeat = channel.unary_unary(
        '/proto.Tokens/HeartBeat',
        request_serializer=config__pb2.JobID.SerializeToString,
        response_deserializer=config__pb2.Ack.FromString,
        )


class TokensServicer(object):
  """these are list of calls client can make
  """

  def Get(self, request, context):
    """client initiates Get() to request a list of tokens
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Done(self, request, context):
    """client calls Done() acknowledging that the job is done
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Reset(self, request, context):
    """client calls Reset() to reinit the server meta-data and book keeping state
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Rescan(self, request, context):
    """client requests server to Rescan() the folder to repopulate list of tokens
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Shuffle(self, request, context):
    """client requests server to shuffle the token list
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Show(self, request, context):
    """client requests server the spit out list of tokens regardless of jobID and other meta-data
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def HeartBeat(self, request, context):
    """client requests job que status
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TokensServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Get': grpc.unary_unary_rpc_method_handler(
          servicer.Get,
          request_deserializer=config__pb2.JobID.FromString,
          response_serializer=config__pb2.Data.SerializeToString,
      ),
      'Done': grpc.unary_unary_rpc_method_handler(
          servicer.Done,
          request_deserializer=config__pb2.JobID.FromString,
          response_serializer=config__pb2.Ack.SerializeToString,
      ),
      'Reset': grpc.unary_unary_rpc_method_handler(
          servicer.Reset,
          request_deserializer=config__pb2.Empty.FromString,
          response_serializer=config__pb2.Ack.SerializeToString,
      ),
      'Rescan': grpc.unary_unary_rpc_method_handler(
          servicer.Rescan,
          request_deserializer=config__pb2.Empty.FromString,
          response_serializer=config__pb2.Ack.SerializeToString,
      ),
      'Shuffle': grpc.unary_unary_rpc_method_handler(
          servicer.Shuffle,
          request_deserializer=config__pb2.Empty.FromString,
          response_serializer=config__pb2.Ack.SerializeToString,
      ),
      'Show': grpc.unary_unary_rpc_method_handler(
          servicer.Show,
          request_deserializer=config__pb2.Empty.FromString,
          response_serializer=config__pb2.Data.SerializeToString,
      ),
      'HeartBeat': grpc.unary_unary_rpc_method_handler(
          servicer.HeartBeat,
          request_deserializer=config__pb2.JobID.FromString,
          response_serializer=config__pb2.Ack.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'proto.Tokens', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
